<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Admin">
	
	
	<resultMap type="kh.pet.dto.MessageDTO" id="recievemessage">
		<result property="msg_seq" column="rmsg_seq"/>
		<result property="msg_sender" column="rmsg_sender"/>
		<result property="msg_reciever" column="rmsg_reciever"/>
		<result property="msg_title" column="rmsg_title"/>
		<result property="msg_contents" column="rmsg_contents"/>
		<result property="msg_date" column="rmsg_date"/>
		<result property="msg_status" column="rmsg_status"/>
	</resultMap>
	
	<!--baord managemnet  -->
	
	<!--call  -->
	<select id="m_board_call" resultType="kh.pet.dto.MemboardDto">
		select * from (select mem_board.* , row_number() over(order by mb_seq desc)rnum from mem_board) where rnum between ${start} and ${end}
	</select>
	
	<select id="p_board_call" resultType="kh.pet.dto.PetsitterboardDTO">
		select * from (select petsitter_board.*, row_number () over (order by psb_seq desc) rnum from petsitter_board)where rnum between #{start} and #{end}
	</select>
	<select id="c_board_call" resultType="kh.pet.dto.CommunityDTO">
		select * from (select Community.* , row_number() over(order by cu_seq desc)rnum from Community) where rnum between ${start} and ${end}
	</select>
	
	<sql id="board_call">
		<choose><when test="board_type == 'mem_board'">mem_board</when><when test="board_type == 'petsitter_board'">petsitter_board</when><when test="board_type == 'free'">Community</when></choose>
	</sql>
	
	<select id="boardcount" resultType="int">
		select count(*) from <include refid="board_call"/>
	</select>
	
	
	<update id="board_state">
		update <include refid="board_call"/>  set <choose><when test="board_type == 'mem_board'"> mb_boardstatus = #{state} where mb_seq = #{seq}</when><when test="board_type == 'petsitter_board'">psb_boardstatus = #{state} where psb_seq = #{seq}</when><when test="board_type == 'free'">BOARD_STATUS = #{state} where cu_seq = #{seq}</when></choose>
	</update>


	<!-- petsitter management -->
	<select id="petsitter" resultType="kh.pet.dto.PetsitterDTO">
		select * from (select p.* , row_number() over(order by ps_id desc)rnum from member m, petsitter p where m.mem_id=p.ps_id and m.mem_type=1) where rnum between 1 and 10
	</select>
	
	<select id="sittercount" resultType="int">
		select count(*) from member m, petsitter p where m.mem_id=p.ps_id and m.mem_type=1
	</select>
	
	
	<update id="petaccept">
		update member set mem_type = 2 where mem_id = #{value}
	</update>
	
	<delete id="petcencel">
		delete from petsitter where ps_id=#{value}  
	</delete>
	
	
	<!-- black member  -->
	<select id="blackmem" resultType="kh.pet.dto.MemberDTO">
	 	select * from (select member.* , row_number() over(order by MEM_JOIN_DATE desc)rnum  from member where mem_status = 'black') where rnum between ${start} and ${end}
	</select>
	
	<select id="black_membercount" resultType="int">
		select count(*) from member where mem_status = 'black'
	</select>
	

	<!-- memeber management  -->
	<select id="memberlist" resultType="kh.pet.dto.MemberDTO">
	 	select * from (select member.* , row_number() over(order by MEM_JOIN_DATE desc)rnum from member) where rnum between ${start} and ${end}
	</select>
	
	<update id="mem_state">
		update member set  mem_status = <choose><when test="s_stop_day == 'no'">'no'</when><when test="s_stop_day == 'f_stop'">'black'</when><otherwise>'stop'</otherwise></choose> where mem_id = #{stop_id}
	</update>
	
	<select id="membercount" resultType="int">
		select count(*) from member
	</select>
	
	<insert id="mem_stop">
		insert into stop_mem values(stop_seq.nextval,sysdate,#{stop_id},#{stop_reason},${stop_day})
	</insert>
	
	<update id="mem_stop_update">
		update stop_mem set stop_day = stop_day+${stop_day} where stop_id = #{stop_id} 
	</update>
	
	<select id="mem_stop_search" resultType="int">
		select count(*) from stop_mem where stop_day != 0 and stop_id = #{value}
	</select>
	
	<delete id="mem_stop_cancel">
		delete from stop_mem where stop_id = #{value}
	</delete>
	
	<update id="mem_stop_count">
		update stop_mem set stop_day = (stop_day-1)
	</update>
	
	<update id="mem_stop_solve">
		update member set mem_pw = #{value} where MEM_ADDRESS1 = 'admin_address'
	</update>
	
	<select id="mem_stop_solve_search" resultType="kh.pet.dto.Stop_memberDTO">
		select * from stop_mem where stop_day = 0
	</select>
	
	
	
	<!--reservation management -->
	
	
	<!--mem_board  -->
	
	<!--status  -->
	
	<select id="rememboard" resultType="kh.pet.dto.MemboardDto">
		select * from (select mem_board.* , row_number() over(order by mb_seq desc)rnum from mem_board where mb_restatus='yes' and mb_RESERVE_num ='null' ) where rnum between ${start} and ${end}
	</select>
	
	<select id="re_memboardCount" resultType="int">
		select count(*) from mem_board where mb_restatus='yes' and mb_RESERVE_num ='null'
 	</select>
	
	<update id="accept_mem_board">
		update mem_board set MB_RESERVE_NUM = #{seq} where mb_seq = #{p_seq}
	</update>
	
	<update id="cancel_mem_board">
		update mem_board set MB_RESTATUS = 'no' where mb_seq = #{value}
	</update>
	
	<!--petsitter_board  -->
	<select id="repsboard" resultType="kh.pet.dto.WaitlistDTO">
		select * from (select waitlist.* , row_number() over(order by rsv_time desc)rnum from waitlist) where rnum between ${start} and ${end}
	</select>
	
	<select id="re_pscount" resultType="int">
		select count(*) from waitlist
 	</select>
	
	<select id="accept_pet_info" resultType="kh.pet.dto.WaitlistDTO">
		select * from waitlist where wait_seq = #{value}
	</select>
	
	<insert id="accept_pet_rsv">
		insert into reservation values(#{reserve_seq},#{petsitter_board_seq},#{petsitter_id},#{mem_id},#{pet_name},${reserve_point},#{start_day},#{end_day},#{reserve_time},sysdate)
	</insert>
	
	<delete id="del_rsv">
		delete from waitlist where wait_seq = #{value}
	</delete>
	
	<update id="petsitter_time">
		update petsitter_board set psb_boardstatus = 'stop' where psb_start_day <![CDATA[<]]> sysdate;
	</update>
	
	
	
	<!--chart information  -->
	<select id="be_week" resultType="kh.pet.dto.Visitor_countDTO">
		select to_char(v_date,'day'),v_count from visitor_count where v_date between sysdate-13 and sysdate-6 order by to_char(v_date,'d')
	</select>
	
	<select id="to_week" resultType="kh.pet.dto.Visitor_countDTO">
		select to_char(v_date,'day'),v_count from visitor_count where v_date between sysdate-6 and sysdate order by to_char(v_date,'d')
	</select>
	
	<insert id="record_count">
		insert into visitor_count values (sysdate,#{value})
	</insert>
	
	<update id="record_update">
		update visitor_count set v_count = v_count + #{value} where v_date = sysdate 
	</update>
	
	<!--report management -->
	<select id="reportlist" resultType="kh.pet.dto.ReportDTO">
		select * from (select reports.* , row_number() over(order by report_seq desc)rnum from reports) where rnum between ${start} and ${end}
	</select>
	
	<update id="accpet_report">
		update member set mem_warning = mem_warning + 1 where mem_id = #{value}
	</update>
	
	<delete id="delete_report">
		delete from reports report_seq = #{value};
	</delete>
	
	<!--admin password   -->
	<update id="admin_password">
		update member set MEM_PW = #{value} where mem_id = '관리자'
	</update>
	
	
	<!--admin message  -->
	<select id="admin_messagelist" resultType="kh.pet.dto.MessageDTO" resultMap="recievemessage">
		select * from (select recieve_message.* , row_number() over(order by rmsg_seq desc)rnum from recieve_message where rmsg_reciever = '관리자' ) where rnum between ${start} and ${end}
	</select>
	
	<select id="message_count" resultType="int">
		select count(*) from recieve_message where rmsg_reciever = '관리자'
	</select>
	
	
	
</mapper>